<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zebra.xconfig.server.dao.mapper.XProjectProfileMapper">
    <select id="queryAllProjects" resultType="string">
        SELECT
          project
        FROM x_project
    </select>

    <select id="queryProjectDependencies" resultType="string" parameterType="map">
        SELECT
          depProject
        FROM x_project_dependency
        WHERE project = #{project}
        ORDER BY id
    </select>

    <select id="queryProjectProfiles" resultType="string" parameterType="map">
        SELECT
          profile
        FROM x_profile
        WHERE project = #{project}
        ORDER BY id
    </select>

    <select id="queryProjectsByPrefix" resultType="string" parameterType="map">
        SELECT
          project
        FROM x_project
        WHERE project LIKE CONCAT(#{prefix},'%')
    </select>

    <insert id="batchInsertDependencies" parameterType="list">
        INSERT INTO x_project_dependency
            (project,depProject)
        VALUES
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.project},#{item.depProject})
        </foreach>
    </insert>

    <delete id="delDependencies" parameterType="map">
        DELETE FROM x_project_dependency
        WHERE project = #{project}
    </delete>

    <select id="loadProject" parameterType="map" resultType="string">
        SELECT
          project
        FROM x_project
        WHERE project = #{project}
    </select>

    <select id="loadProfile" parameterType="map" resultType="string">
        SELECT
          profile
        FROM x_profile
        WHERE project = #{project}
        AND profile = #{profile}
    </select>

    <insert id="insertProfile" parameterType="com.zebra.xconfig.server.po.ProfilePo">
        INSERT INTO x_profile
          (project,profile,md5,profileKey)
        VALUE
          (#{project},#{profile},#{md5},#{profileKey})
    </insert>

    <delete id="delProfile" parameterType="map">
        DELETE FROM x_profile
        WHERE project = #{project}
        AND profile = #{profile}
    </delete>

    <insert id="insertProject" parameterType="map">
        INSERT INTO x_project(project) VALUE (#{project})
    </insert>

    <delete id="delProject" parameterType="map">
        DELETE FROM x_project
        WHERE project = #{project}
    </delete>

    <select id="queryProjectsByDepedProject" parameterType="map" resultType="string">
        SELECT project
        FROM x_project_dependency
        WHERE depProject = #{depProject}
    </select>

    <delete id="delProfileByProject" parameterType="map">
        DELETE FROM x_profile
        WHERE project = #{project}
    </delete>
</mapper>